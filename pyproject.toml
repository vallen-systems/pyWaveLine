[tool.black]
line-length = 100

[tool.isort]
line_length = 100
multi_line_output = 3
include_trailing_comma = true
use_parentheses = true

[tool.pylint.message_control]
disable = [
    "import-error",
    "bad-continuation",
    "missing-module-docstring",
    "missing-function-docstring",
    "logging-fstring-interpolation",
    "too-many-instance-attributes",
    "too-many-public-methods",
]

[tool.pylint.format]
max-line-length = 100
variable-rgx="[a-z_][a-z0-9_]{0,30}$"  # allow single character variables

[tool.pylint.similarities]
min-similarity-lines = 10

[tool.mypy]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --benchmark-columns=mean,stddev"
testpaths = ["tests/unit"]
log_cli = true
log_cli_level = "WARNING"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = black, isort, pylint, mypy, py36, py37, py38, py39, py310, coverage-report

[testenv:black]
skip_install = true
deps = black
commands =
    black --diff src/
    black --check src/

[testenv:isort]
skip_install = true
deps = isort>5
commands =
    isort --diff src/
    isort --check-only src/

[testenv:pylint]
skip_install = true
deps = pylint
commands = pylint src/

[testenv:mypy]
skip_install = true
deps =
    mypy
    types-dataclasses
commands = mypy src/

[testenv]
extras = tests
commands = 
    coverage run --parallel -m pytest --benchmark-skip

[testenv:coverage-report]
skip_install = true
deps =
    coverage[toml]>=5
commands =
    - coverage combine
    coverage report

[testenv:coveralls]
skip_install = true
deps =
    coverage[toml]>=5
    coveralls
passenv = GITHUB_*
commands = 
    - coverage combine
    coveralls --service=github

[testenv:docs]
extras = docs
changedir = docs
whitelist_externals = make
commands =
    make linkcheck
    make dummy
"""

[tool.coverage.run]
branch = true
source = ["waveline"]

[tool.coverage.paths]
source = ["src", ".tox/*/site-packages"]
